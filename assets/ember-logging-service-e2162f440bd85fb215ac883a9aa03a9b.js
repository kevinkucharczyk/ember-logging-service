"use strict";define("ember-logging-service/app",["exports","ember","ember/resolver","ember/load-initializers","ember-logging-service/config/environment","ember-logging-service/reopens/route"],function(e,t,n,r,i,a){var o;t["default"].MODEL_FACTORY_INJECTIONS=!0,o=t["default"].Application.extend({modulePrefix:i["default"].modulePrefix,podModulePrefix:i["default"].podModulePrefix,Resolver:n["default"]}),r["default"](o,i["default"].modulePrefix),e["default"]=o}),define("ember-logging-service/components/app-version",["exports","ember-cli-app-version/components/app-version","ember-logging-service/config/environment"],function(e,t,n){var r=n["default"].APP.name,i=n["default"].APP.version;e["default"]=t["default"].extend({version:i,name:r})}),define("ember-logging-service/controllers/array",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("ember-logging-service/controllers/object",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("ember-logging-service/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","ember-logging-service/config/environment"],function(e,t,n){e["default"]={name:"App Version",initialize:t["default"](n["default"].APP.name,n["default"].APP.version)}}),define("ember-logging-service/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e["default"]={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t["default"]),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("ember-logging-service/initializers/export-application-global",["exports","ember","ember-logging-service/config/environment"],function(e,t,n){function r(){var e=arguments[1]||arguments[0];if(n["default"].exportApplicationGlobal!==!1){var r,i=n["default"].exportApplicationGlobal;r="string"==typeof i?i:t["default"].String.classify(n["default"].modulePrefix),window[r]||(window[r]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[r]}}))}}e.initialize=r,e["default"]={name:"export-application-global",initialize:r}}),define("ember-logging-service/initializers/logger",["exports"],function(e){function t(e){e.inject("route","logger","service:logger"),e.inject("component","logger","service:logger")}e.initialize=t,e["default"]={name:"logger",initialize:t}}),define("ember-logging-service/reopens/route",["exports","ember"],function(e,t){e["default"]=t["default"].Route.reopen({afterModel:function(e,t){this._super(e,t),this.routeName===t.targetName&&this.get("logger").log({type:"transition",target:t.targetName,queryParams:t.queryParams})}})}),define("ember-logging-service/router",["exports","ember","ember-logging-service/config/environment"],function(e,t,n){var r=t["default"].Router.extend({location:n["default"].locationType});r.map(function(){this.route("firstroute"),this.route("secondroute"),this.route("thirdroute")}),e["default"]=r}),define("ember-logging-service/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){e["default"]=t["default"]}),define("ember-logging-service/services/logger",["exports","ember"],function(e,t){e["default"]=t["default"].Service.extend({events:[],log:function(e){var n={time:new Date};this.get("events").pushObject(t["default"].merge(n,e)),this.saveLogs()},saveLogs:function(){if(this.get("events.length")>=5){var e={app:"emberlogger",events:t["default"].copy(this.get("events")),locale:navigator.language,time:new Date,userAgent:navigator.userAgent};console.log(e),this.get("events").clear()}}})}),define("ember-logging-service/templates/application",["exports"],function(e){e["default"]=Ember.HTMLBars.template(function(){return{meta:{topLevel:!1,revision:"Ember@2.1.0",loc:{source:null,start:{line:1,column:0},end:{line:12,column:0}},moduleName:"ember-logging-service/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),n=e.createTextNode("Open Developer Tools, watch the console and click the below links a couple of times.\n\n");e.appendChild(t,n);var n=e.createElement("p"),r=e.createTextNode("Routes:");e.appendChild(n,r),e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createElement("ul"),r=e.createTextNode("\n  ");e.appendChild(n,r);var r=e.createElement("li"),i=e.createComment("");e.appendChild(r,i),e.appendChild(n,r);var r=e.createTextNode("\n  ");e.appendChild(n,r);var r=e.createElement("li"),i=e.createComment("");e.appendChild(r,i),e.appendChild(n,r);var r=e.createTextNode("\n  ");e.appendChild(n,r);var r=e.createElement("li"),i=e.createComment("");e.appendChild(r,i),e.appendChild(n,r);var r=e.createTextNode("\n  ");e.appendChild(n,r);var r=e.createElement("li"),i=e.createComment("");e.appendChild(r,i),e.appendChild(n,r);var r=e.createTextNode("\n");e.appendChild(n,r),e.appendChild(t,n);var n=e.createTextNode("\n\n");e.appendChild(t,n);var n=e.createComment("");e.appendChild(t,n);var n=e.createTextNode("\n");return e.appendChild(t,n),t},buildRenderNodes:function(e,t,n){var r=e.childAt(t,[3]),i=new Array(5);return i[0]=e.createMorphAt(e.childAt(r,[1]),0,0),i[1]=e.createMorphAt(e.childAt(r,[3]),0,0),i[2]=e.createMorphAt(e.childAt(r,[5]),0,0),i[3]=e.createMorphAt(e.childAt(r,[7]),0,0),i[4]=e.createMorphAt(t,5,5,n),i},statements:[["inline","link-to",["Home","index"],[],["loc",[null,[5,6],[5,32]]]],["inline","link-to",["First","firstroute"],[],["loc",[null,[6,6],[6,38]]]],["inline","link-to",["Second","secondroute"],[],["loc",[null,[7,6],[7,40]]]],["inline","link-to",["Third","thirdroute"],[],["loc",[null,[8,6],[8,38]]]],["content","outlet",["loc",[null,[11,0],[11,10]]]]],locals:[],templates:[]}}())}),define("ember-logging-service/config/environment",["ember"],function(e){var t="ember-logging-service";try{var n=t+"/config/environment",r=e["default"].$('meta[name="'+n+'"]').attr("content"),i=JSON.parse(unescape(r));return{"default":i}}catch(a){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests?require("ember-logging-service/tests/test-helper"):require("ember-logging-service/app")["default"].create({name:"ember-logging-service",version:"0.0.0+502ea7b2"});